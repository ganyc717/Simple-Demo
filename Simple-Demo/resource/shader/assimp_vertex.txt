#version 300 es
precision highp float;

const float Shininess = 2.0;

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 cord;
uniform mat4 MVP;
uniform vec3 light_direction;
uniform vec3 eye_position;
out float diffuse_factor;
out float specular_factor;
out vec2 texcoord;

void main()
{
    texcoord = cord;
    vec3 light = normalize(light_direction);
    float ndotl = max(0.0,dot(normal,light));

    if(ndotl > 0.0)
    {
        vec3 reflect = 2.0 * ndotl * normal - light;
        vec3 eye_direction = normalize(eye_position - position);
        specular_factor = pow(max(0.0,dot(reflect, eye_direction)), Shininess);
    }
    else
    {
        specular_factor = 0.0;
    }

    diffuse_factor = ndotl;
    gl_Position = MVP * vec4(position,1.0);
}